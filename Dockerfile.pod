###############################################################################
# Stage 0 – download LocalStack image without Docker/Podman
###############################################################################
FROM quay.io/skopeo/stable:v1               AS fetch_localstack

# Copy LocalStack image from Docker Hub to a local OCI archive tarball
RUN skopeo copy --insecure-policy \
      docker://docker.io/localstack/localstack:latest \
      oci-archive:/tmp/localstack.tar:latest

FROM rust:bookworm

# Add the pre-fetched LocalStack tarball
COPY --from=fetch_localstack /tmp/localstack.tar /opt/images/localstack.tar

RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive \
    apt-get install -y --no-install-recommends \
        podman \
        uidmap slirp4netns fuse-overlayfs iptables && \
    apt-get clean && rm -rf /var/lib/apt/lists/* \
                      /usr/share/doc/* /usr/share/man/*

# Create user + XDG dir while we’re still root
RUN useradd -ms /bin/bash dev && \
    echo "dev ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers && \
    mkdir -p /run/user/1000 && chown -R dev:dev /run/user/1000

ENV XDG_RUNTIME_DIR=/run/user/1000
USER dev
WORKDIR /workspace

ENV PODMAN_LOG_LEVEL=error

COPY test-doc .
COPY run_test.sh . 

# ENV PATH=/usr/local/cargo/bin:/usr/local/rustup/bin:$PATH

# ENTRYPOINT ["/bin/bash","-lc","podman system service -t 0 & exec bash"]

# ENTRYPOINT ["/bin/bash","-lc","podman system service -t 0 & exec bash run_test.sh"]
ENTRYPOINT ["/bin/bash", "-c", "podman system service -t 0 & exec bash run_test.sh"]
